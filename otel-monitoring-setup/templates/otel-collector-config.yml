receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  batch:
    timeout: 10s
    send_batch_size: 1024

  resource:
    attributes:
      - key: service.name
        value: claude-code
        action: upsert

  memory_limiter:
    check_interval: 1s
    limit_mib: 512

exporters:
  # Export metrics to Prometheus
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: claude_code
    const_labels:
      source: claude_code_telemetry

  # Debug exporter (outputs to console for troubleshooting)
  # Use this to view incoming telemetry data in real-time
  debug:
    verbosity: normal

service:
  pipelines:
    metrics:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [prometheus, debug]

    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [debug]

  telemetry:
    logs:
      level: info

# NOTE: Log export to Loki requires additional configuration.
# The otlphttp/loki exporter is not available in the standard collector image.
# For log collection, consider using Promtail or Grafana Alloy as separate services.
# Current setup uses debug exporter to view logs in collector output for troubleshooting.
